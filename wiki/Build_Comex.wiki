#summary how to build Comex components on your os
#labels Phase-Implementation

= Introduction =

This page lists methods to build Comex components on Linux and Windows os.

= Build on Linux =

== Build and install from tarballs ==

Can find tarballs in [http://code.google.com/p/comex-project/downloads/list Downloads area].

=== For comex-base ===

Build Dependencies:
 * mono devel package
 * log4net devel package

To build and install can use:
{{{ 
 $ ./configure --libdir=/usr/lib
 $ make
 # make linuxpkgconfigdir=/usr/share/pkgconfig install (as root)
}}}

NOTE: Before build other tarballs need also to register comex-base dll in Mono GAC_
{{{
# gacutil -i /usr/lib/comex-base/comex-base.dll -package comex-base -gacdir /usr/lib/mono/gac
}}}
----

=== For comex ===

Build Dependencies:
 * mono devel package
 * log4net devel package
 * comex-base devel package (or tarball install)

To build and install can use:
{{{ 
 $ ./configure
 $ make
 # make install (as root)
}}}
----

=== For comex-gtk ===

Build Dependencies:
 * mono devel package
 * log4net devel package
 * comex-base devel package (or tarball install)
 * gtk-sharp2 devel package
 * glade-sharp2

To build and install can use:
{{{ 
 $ ./configure
 $ make
 # make install (as root)
}}}
----

=== For comex-qt ===

Build Dependencies:
 * mono devel package
 * log4net devel package
 * comex-base devel package (or tarball install)
 * qyoto devel package

To build and install can use:
{{{ 
 $ ./configure
 $ make
 # make install (as root)
}}}


<br />


== Build from sources ==
Need to obtain sources using checkout instructions contained in [http://code.google.com/p/comex-project/source/checkout Source Tabs].

=== For comex-base ===

Build Dependencies:
 * mono devel package
 * log4net devel package

To build can use build script:
{{{ 
 $ ./build-lnx-comex-base.sh
}}}
build output will be generated in comex-base/bin/Debug folder

After you need to register in GAC generated file using:
{{{ 
 # gacutil -i comex-base/bin/Debug/comex-base.dll -package comex-base -gacdir /usr/lib/mono/gac
}}}

You need also to create file /usr/share/pkgconfig/comex-base.pc as follow:
{{{ 
     Name: comex-base
     Description: base component for comex project
     Version: 0.1.8.4

     Requires: 
     Libs: -r:<path of svn checkout>/comex-base/bin/Debug/comex-base.dll
}}}
----

=== For comex ===

Build Dependencies:
 * mono devel package
 * log4net devel package
 * comex-base devel (see [#For_comex-base comex-base])

To build can use build script:
{{{ 
 $ ./build-lnx-comex.sh
}}}
build output will be generated in comex/bin/Debug folder
----

=== For comex-gtk ===

Build Dependencies:
 * mono devel package
 * log4net devel package
 * comex-base devel (see [#For_comex-base comex-base])
 * gtk-sharp2 devel package
 * glade-sharp2

To build can use build script:
{{{ 
 $ ./build-lnx-comex-gtk.sh
}}}
build output will be generated in comex-gtk/bin/Debug folder
----

=== For comex-qt ===

Build Dependencies:
 * mono devel package
 * log4net devel package
 * comex-base devel (see [#For_comex-base comex-base])
 * qyoto devel devel package

To build can use build script:
{{{ 
 $ ./build-lnx-comex-qt.sh
}}}
build output will be generated in comex-qt/bin/Debug folder


<br />


= Build on Windows =

== Build from sources ==
Need to obtain sources using checkout instructions contained in [http://code.google.com/p/comex-project/source/checkout Source Tabs].


After can use [http://sharpdevelop.net/opensource/sd/ SharpDevelop IDE] to build all solutions. Note that you need to change reference to comex-base and log4net in other projects (comex, comex-gtk) because default reference is in GAC.